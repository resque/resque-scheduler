name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  test:
    continue-on-error: true
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      fail-fast: false
      matrix:
        ruby-version:
          - "3.0"
          - "3.1"
          - "3.2"
          - "3.3"
        resque-version:
          - "master"
          - "~> 2.4"
          - "~> 1.27"
        rufus-scheduler:
          - "~> 3.6.0"
          - "~> 3.7.0"
          - "~> 3.8.0"
          - "~> 3.9"
        redis-version:
          - "~> 3.3"
          - "~> 4.8"
          - "~> 5.2"
        exclude:
          - ruby-version: head
            rufus-scheduler: 3.2
          - ruby-version: 3.2
            rufus-scheduler: 3.2
          - ruby-version: 3.3
            rufus-scheduler: 3.2

          - ruby-version: 2.3
            resque-version: "~> 1.27"
            rufus-scheduler: 3.4
          - ruby-version: 2.3
            resque-version: "~> 1.27"
            rufus-scheduler: 3.5
          - ruby-version: 2.5
            resque-version: "~> 2.4.0"
            rufus-scheduler: 3.5
          - ruby-version: 2.5
            resque-version: master
            rufus-scheduler: 3.2

          - ruby-version: 2.3
            redis-version: "~> 5.x"
          - ruby-version: 2.4
            redis-version: "~> 5.x"

          - resque-version: "~> 1.27"
            redis-version: "~> 5.2"
    env:
      REDIS_VERSION: "${{ matrix.redis-version }}"
      RESQUE: "${{ matrix.resque-version }}"
      RUFUS_SCHEDULER: "${{ matrix.rufus-scheduler }}"
      COVERAGE: 1

    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: "${{ matrix.ruby-version }}"
          bundler-cache: true
      - run: bundle exec rake
      - run: bin/bundle_console_test.sh
